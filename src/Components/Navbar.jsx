import React, { useState } from 'react'
import Button from './Button';

function Navbar() {
  const [click,SetClick] = useState(0);

  return (
    <div className='max-w-screen-xl mx-auto py-6 bg-zinc-800 text-white flex items-center justify-between border-b-[1px] border-zinc-600'>
     
     <div className="links flex items-center gap-20">
     <div className="logo flex gap-1 items-center ">
     <svg width="15" height="17" viewBox="0 0 18 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path fillRule="evenodd" clipRule="evenodd" d="M0.585787 7.25245C1.36684 6.4714 2.63317 6.47141 3.41421 7.25245L16.7475 20.5858C17.5286 21.3668 17.5286 22.6332 16.7475 23.4142C15.9665 24.1953 14.7002 24.1953 13.9191 23.4142L0.585786 10.0809C-0.195262 9.29983 -0.195262 8.0335 0.585787 7.25245Z" fill="currentColor"></path>
<path fillRule="evenodd" clipPath="evenodd" d="M1.73536e-07 2C1.73536e-07 0.895431 0.895431 0 2 0H15.3333C16.4379 0 17.3333 0.895431 17.3333 2C17.3333 3.10457 16.4379 4 15.3333 4H2C0.895431 4 1.73536e-07 3.10457 1.73536e-07 2Z" fill="currentColor"></path>
<path fillRule="evenodd" clipPath="evenodd" d="M4 10.6667L4 22C4 23.1046 3.10457 24 2 24C0.895432 24 1.24702e-06 23.1046 1.19873e-06 22L1.39078e-07 8.66667C1.15892e-07 8.13623 0.210714 7.62753 0.585787 7.25245C0.960859 6.87738 1.46957 6.66667 2 6.66667L15.3333 6.66667C16.4379 6.66667 17.3333 7.5621 17.3333 8.66667C17.3333 9.77124 16.4379 10.6667 15.3333 10.6667L4 10.6667Z" fill="currentColor"></path>
</svg>
<svg width="80" height="17" viewBox="0 0 105 22" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M9.77382 20.9996L5.66716 13.7463H3.90716V20.9996H0.173828V2.38628H7.16049C8.60049 2.38628 9.82716 2.64405 10.8405 3.15961C11.8538 3.65738 12.6094 4.34183 13.1072 5.21294C13.6227 6.06627 13.8805 7.02627 13.8805 8.09294C13.8805 9.31961 13.5249 10.4307 12.8138 11.4263C12.1027 12.4041 11.0449 13.0796 9.64049 13.4529L14.0938 20.9996H9.77382ZM3.90716 10.9463H7.02716C8.04049 10.9463 8.79605 10.7063 9.29383 10.2263C9.7916 9.7285 10.0405 9.04405 10.0405 8.17294C10.0405 7.31961 9.7916 6.66183 9.29383 6.19961C8.79605 5.71961 8.04049 5.47961 7.02716 5.47961H3.90716V10.9463Z" fill="currentColor"></path>
<path d="M30.9905 13.2929C30.9905 13.8263 30.9549 14.3063 30.8838 14.7329H20.0838C20.1727 15.7996 20.546 16.6352 21.2038 17.2396C21.8616 17.8441 22.6705 18.1463 23.6305 18.1463C25.0172 18.1463 26.0038 17.5507 26.5905 16.3596H30.6172C30.1905 17.7818 29.3727 18.9552 28.1638 19.8796C26.9549 20.7863 25.4705 21.2396 23.7105 21.2396C22.2883 21.2396 21.0083 20.9285 19.8705 20.3063C18.7505 19.6663 17.8705 18.7685 17.2305 17.6129C16.6083 16.4574 16.2972 15.1241 16.2972 13.6129C16.2972 12.0841 16.6083 10.7418 17.2305 9.58628C17.8527 8.43072 18.7238 7.54183 19.8438 6.91961C20.9638 6.29739 22.2527 5.98627 23.7105 5.98627C25.1149 5.98627 26.3683 6.2885 27.4705 6.89294C28.5905 7.49739 29.4527 8.35961 30.0572 9.47961C30.6794 10.5818 30.9905 11.8529 30.9905 13.2929ZM27.1238 12.2263C27.106 11.2663 26.7594 10.5018 26.0838 9.93294C25.4083 9.34628 24.5816 9.05294 23.6038 9.05294C22.6794 9.05294 21.8972 9.33739 21.2572 9.90628C20.6349 10.4574 20.2527 11.2307 20.1105 12.2263H27.1238Z" fill="currentColor"></path>
<path d="M40.4888 9.29294H37.9022V20.9996H34.1155V9.29294H32.4355V6.22628H34.1155V5.47961C34.1155 3.66627 34.631 2.33294 35.6622 1.47961C36.6933 0.626274 38.2488 0.226275 40.3288 0.279608V3.42627C39.4221 3.4085 38.791 3.55961 38.4355 3.87961C38.0799 4.19961 37.9022 4.77739 37.9022 5.61294V6.22628H40.4888V9.29294Z" fill="currentColor"></path>
<path d="M49.4682 21.2396C48.046 21.2396 46.766 20.9285 45.6282 20.3063C44.4904 19.6663 43.5926 18.7685 42.9349 17.6129C42.2949 16.4574 41.9749 15.1241 41.9749 13.6129C41.9749 12.1018 42.3037 10.7685 42.9615 9.61294C43.6371 8.45739 44.5526 7.5685 45.7082 6.94628C46.8637 6.30627 48.1526 5.98627 49.5749 5.98627C50.9971 5.98627 52.286 6.30627 53.4415 6.94628C54.5971 7.5685 55.5037 8.45739 56.1615 9.61294C56.8371 10.7685 57.1749 12.1018 57.1749 13.6129C57.1749 15.1241 56.8282 16.4574 56.1349 17.6129C55.4593 18.7685 54.5349 19.6663 53.3615 20.3063C52.206 20.9285 50.9082 21.2396 49.4682 21.2396ZM49.4682 17.9863C50.1437 17.9863 50.7749 17.8263 51.3615 17.5063C51.966 17.1685 52.446 16.6707 52.8015 16.0129C53.1571 15.3552 53.3349 14.5552 53.3349 13.6129C53.3349 12.2085 52.9615 11.1329 52.2149 10.3863C51.486 9.62183 50.5882 9.23961 49.5215 9.23961C48.4549 9.23961 47.5571 9.62183 46.8282 10.3863C46.1171 11.1329 45.7615 12.2085 45.7615 13.6129C45.7615 15.0174 46.1082 16.1018 46.8015 16.8663C47.5126 17.6129 48.4015 17.9863 49.4682 17.9863Z" fill="currentColor"></path>
<path d="M68.6601 20.9996L63.6467 14.7063V20.9996H59.9134V1.26627H63.6467V12.4929L68.6067 6.22628H73.4601L66.9534 13.6396L73.5134 20.9996H68.6601Z" fill="currentColor"></path>
<path d="M89.433 6.22628V20.9996H85.673V19.1329C85.193 19.7729 84.5619 20.2796 83.7796 20.6529C83.0152 21.0085 82.1796 21.1863 81.273 21.1863C80.1174 21.1863 79.0952 20.9463 78.2063 20.4663C77.3174 19.9685 76.6152 19.2485 76.0996 18.3063C75.6019 17.3463 75.353 16.2085 75.353 14.8929V6.22628H79.0863V14.3596C79.0863 15.5329 79.3796 16.4396 79.9663 17.0796C80.553 17.7018 81.353 18.0129 82.3663 18.0129C83.3974 18.0129 84.2063 17.7018 84.793 17.0796C85.3796 16.4396 85.673 15.5329 85.673 14.3596V6.22628H89.433Z" fill="currentColor"></path>
<path d="M98.7699 21.2396C97.561 21.2396 96.4765 21.0263 95.5165 20.5996C94.5565 20.1552 93.7921 19.5596 93.2232 18.8129C92.6721 18.0663 92.3698 17.2396 92.3165 16.3329H96.0765C96.1476 16.9018 96.4232 17.3729 96.9032 17.7463C97.401 18.1196 98.0143 18.3063 98.7432 18.3063C99.4543 18.3063 100.005 18.1641 100.396 17.8796C100.805 17.5952 101.01 17.2307 101.01 16.7863C101.01 16.3063 100.761 15.9507 100.263 15.7196C99.7832 15.4707 99.0098 15.2041 97.9432 14.9196C96.841 14.6529 95.9343 14.3774 95.2232 14.0929C94.5298 13.8085 93.9254 13.3729 93.4099 12.7863C92.9121 12.1996 92.6632 11.4085 92.6632 10.4129C92.6632 9.59516 92.8943 8.8485 93.3565 8.17294C93.8365 7.49739 94.5121 6.96405 95.3832 6.57294C96.2721 6.18183 97.3121 5.98627 98.5032 5.98627C100.263 5.98627 101.668 6.43072 102.717 7.31961C103.765 8.19072 104.343 9.37294 104.45 10.8663H100.877C100.823 10.2796 100.574 9.81739 100.13 9.47961C99.7032 9.12405 99.1254 8.94627 98.3965 8.94627C97.721 8.94627 97.1965 9.07072 96.8232 9.31961C96.4676 9.5685 96.2899 9.91516 96.2899 10.3596C96.2899 10.8574 96.5387 11.2396 97.0365 11.5063C97.5343 11.7552 98.3076 12.0129 99.3565 12.2796C100.423 12.5463 101.303 12.8218 101.997 13.1063C102.69 13.3907 103.285 13.8352 103.783 14.4396C104.299 15.0263 104.565 15.8085 104.583 16.7863C104.583 17.6396 104.343 18.4041 103.863 19.0796C103.401 19.7552 102.725 20.2885 101.837 20.6796C100.965 21.0529 99.9432 21.2396 98.7699 21.2396Z" fill="currentColor"></path>
</svg>
     </div>
      <ul className="flex gap-6 items-center ">
      { ["Home","Work","Culture","","News"].map((elem,idx)=> 

      elem.length == 0 ? <a key={idx} className='text-zinc-400'>|</a>: <a key={`link-${idx}`} className='text-sm  capitalize flex items-center gap-1 cursor-pointer' onClick={()=>SetClick(idx)}>
        {click=== idx &&  <span  style={{boxShadow:"0 0 0 .15em #00FF19"}} className='w-[2px] h-[2px] rounded-full bg-[#00FF19]'> </span>}
        
        {elem}
        </a>
      
 
 

      
    )
    
      }

      </ul>
     </div>
    <Button />
      
    </div>
  )
}

export default Navbar